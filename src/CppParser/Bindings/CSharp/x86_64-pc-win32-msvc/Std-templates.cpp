#include <string>

template class __declspec(dllexport) std::allocator<char>;
template class __declspec(dllexport) std::basic_string<char, std::char_traits<char>, std::allocator<char>>;
template class __declspec(dllexport) std::_Identity<long long>;
template class __declspec(dllexport) std::_Identity<std::integral_constant<bool>>;
template class __declspec(dllexport) std::initializer_list<char>;
template class __declspec(dllexport) std::initializer_list<wchar_t>;
template class __declspec(dllexport) std::initializer_list<char16_t>;
template class __declspec(dllexport) std::initializer_list<char32_t>;
template class __declspec(dllexport) std::initializer_list<bool>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::PreprocessedEntity*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::BlockContentComment*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::Parameter*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::Declaration*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::FunctionTemplateSpecialization*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::TemplateArgument>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::Function*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::Template*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::TypedefDecl*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::TypeAlias*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::Variable*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::Friend*>;
template class __declspec(dllexport) std::initializer_list<std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char>>, CppSharp::CppParser::AST::Declaration*>>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::BaseClassSpecifier*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::Field*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::Method*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::AccessSpecifierDecl*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::VTableComponent>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::VFTableInfo>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::LayoutField>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::LayoutBase>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::Class*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::Enumeration::Item*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::Enumeration*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::Namespace*>;
template class __declspec(dllexport) std::initializer_list<std::basic_string<char, std::char_traits<char>, std::allocator<char>>>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::ClassTemplateSpecialization*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::Expression*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::VarTemplateSpecialization*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::MacroDefinition*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::TranslationUnit*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::InlineContentComment*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::BlockCommandComment::Argument>;
template class __declspec(dllexport) std::initializer_list<unsigned int>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::VerbatimBlockLineComment*>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::InlineCommandComment::Argument>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::AST::HTMLStartTagComment::Attribute>;
template class __declspec(dllexport) std::initializer_list<CppSharp::CppParser::ParserDiagnostic>;
template class __declspec(dllexport) std::less<int>;
template class __declspec(dllexport) std::_Forced<std::_Unforced>;
template class __declspec(dllexport) std::_Lex_compare_optimize<void>;
template class __declspec(dllexport) std::_String_iter_types<char, unsigned long long, long long, char*, const char*, char&, const char&>;
template class __declspec(dllexport) std::_String_iter_types<wchar_t, unsigned long long, long long, wchar_t*, const wchar_t*, wchar_t&, const wchar_t&>;
template class __declspec(dllexport) std::_String_iter_types<char16_t, unsigned long long, long long, char16_t*, const char16_t*, char16_t&, const char16_t&>;
template class __declspec(dllexport) std::_String_iter_types<char32_t, unsigned long long, long long, char32_t*, const char32_t*, char32_t&, const char32_t&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::PreprocessedEntity*, unsigned long long, long long, CppSharp::CppParser::AST::PreprocessedEntity**, const CppSharp::CppParser::AST::PreprocessedEntity**, CppSharp::CppParser::AST::PreprocessedEntity*&, const CppSharp::CppParser::AST::PreprocessedEntity*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::BlockContentComment*, unsigned long long, long long, CppSharp::CppParser::AST::BlockContentComment**, const CppSharp::CppParser::AST::BlockContentComment**, CppSharp::CppParser::AST::BlockContentComment*&, const CppSharp::CppParser::AST::BlockContentComment*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::Parameter*, unsigned long long, long long, CppSharp::CppParser::AST::Parameter**, const CppSharp::CppParser::AST::Parameter**, CppSharp::CppParser::AST::Parameter*&, const CppSharp::CppParser::AST::Parameter*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::Declaration*, unsigned long long, long long, CppSharp::CppParser::AST::Declaration**, const CppSharp::CppParser::AST::Declaration**, CppSharp::CppParser::AST::Declaration*&, const CppSharp::CppParser::AST::Declaration*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::FunctionTemplateSpecialization*, unsigned long long, long long, CppSharp::CppParser::AST::FunctionTemplateSpecialization**, const CppSharp::CppParser::AST::FunctionTemplateSpecialization**, CppSharp::CppParser::AST::FunctionTemplateSpecialization*&, const CppSharp::CppParser::AST::FunctionTemplateSpecialization*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::TemplateArgument, unsigned long long, long long, CppSharp::CppParser::AST::TemplateArgument*, const CppSharp::CppParser::AST::TemplateArgument*, CppSharp::CppParser::AST::TemplateArgument&, const CppSharp::CppParser::AST::TemplateArgument&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::Function*, unsigned long long, long long, CppSharp::CppParser::AST::Function**, const CppSharp::CppParser::AST::Function**, CppSharp::CppParser::AST::Function*&, const CppSharp::CppParser::AST::Function*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::Template*, unsigned long long, long long, CppSharp::CppParser::AST::Template**, const CppSharp::CppParser::AST::Template**, CppSharp::CppParser::AST::Template*&, const CppSharp::CppParser::AST::Template*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::TypedefDecl*, unsigned long long, long long, CppSharp::CppParser::AST::TypedefDecl**, const CppSharp::CppParser::AST::TypedefDecl**, CppSharp::CppParser::AST::TypedefDecl*&, const CppSharp::CppParser::AST::TypedefDecl*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::TypeAlias*, unsigned long long, long long, CppSharp::CppParser::AST::TypeAlias**, const CppSharp::CppParser::AST::TypeAlias**, CppSharp::CppParser::AST::TypeAlias*&, const CppSharp::CppParser::AST::TypeAlias*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::Variable*, unsigned long long, long long, CppSharp::CppParser::AST::Variable**, const CppSharp::CppParser::AST::Variable**, CppSharp::CppParser::AST::Variable*&, const CppSharp::CppParser::AST::Variable*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::Friend*, unsigned long long, long long, CppSharp::CppParser::AST::Friend**, const CppSharp::CppParser::AST::Friend**, CppSharp::CppParser::AST::Friend*&, const CppSharp::CppParser::AST::Friend*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::BaseClassSpecifier*, unsigned long long, long long, CppSharp::CppParser::AST::BaseClassSpecifier**, const CppSharp::CppParser::AST::BaseClassSpecifier**, CppSharp::CppParser::AST::BaseClassSpecifier*&, const CppSharp::CppParser::AST::BaseClassSpecifier*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::Field*, unsigned long long, long long, CppSharp::CppParser::AST::Field**, const CppSharp::CppParser::AST::Field**, CppSharp::CppParser::AST::Field*&, const CppSharp::CppParser::AST::Field*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::Method*, unsigned long long, long long, CppSharp::CppParser::AST::Method**, const CppSharp::CppParser::AST::Method**, CppSharp::CppParser::AST::Method*&, const CppSharp::CppParser::AST::Method*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::AccessSpecifierDecl*, unsigned long long, long long, CppSharp::CppParser::AST::AccessSpecifierDecl**, const CppSharp::CppParser::AST::AccessSpecifierDecl**, CppSharp::CppParser::AST::AccessSpecifierDecl*&, const CppSharp::CppParser::AST::AccessSpecifierDecl*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::VTableComponent, unsigned long long, long long, CppSharp::CppParser::AST::VTableComponent*, const CppSharp::CppParser::AST::VTableComponent*, CppSharp::CppParser::AST::VTableComponent&, const CppSharp::CppParser::AST::VTableComponent&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::VFTableInfo, unsigned long long, long long, CppSharp::CppParser::AST::VFTableInfo*, const CppSharp::CppParser::AST::VFTableInfo*, CppSharp::CppParser::AST::VFTableInfo&, const CppSharp::CppParser::AST::VFTableInfo&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::LayoutField, unsigned long long, long long, CppSharp::CppParser::AST::LayoutField*, const CppSharp::CppParser::AST::LayoutField*, CppSharp::CppParser::AST::LayoutField&, const CppSharp::CppParser::AST::LayoutField&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::LayoutBase, unsigned long long, long long, CppSharp::CppParser::AST::LayoutBase*, const CppSharp::CppParser::AST::LayoutBase*, CppSharp::CppParser::AST::LayoutBase&, const CppSharp::CppParser::AST::LayoutBase&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::Class*, unsigned long long, long long, CppSharp::CppParser::AST::Class**, const CppSharp::CppParser::AST::Class**, CppSharp::CppParser::AST::Class*&, const CppSharp::CppParser::AST::Class*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::Enumeration::Item*, unsigned long long, long long, CppSharp::CppParser::AST::Enumeration::Item**, const CppSharp::CppParser::AST::Enumeration::Item**, CppSharp::CppParser::AST::Enumeration::Item*&, const CppSharp::CppParser::AST::Enumeration::Item*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::Enumeration*, unsigned long long, long long, CppSharp::CppParser::AST::Enumeration**, const CppSharp::CppParser::AST::Enumeration**, CppSharp::CppParser::AST::Enumeration*&, const CppSharp::CppParser::AST::Enumeration*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::Namespace*, unsigned long long, long long, CppSharp::CppParser::AST::Namespace**, const CppSharp::CppParser::AST::Namespace**, CppSharp::CppParser::AST::Namespace*&, const CppSharp::CppParser::AST::Namespace*&>;
template class __declspec(dllexport) std::_Vec_iter_types<std::basic_string<char, std::char_traits<char>, std::allocator<char>>, unsigned long long, long long, std::basic_string<char, std::char_traits<char>, std::allocator<char>>*, const std::basic_string<char, std::char_traits<char>, std::allocator<char>>*, std::basic_string<char, std::char_traits<char>, std::allocator<char>>&, const std::basic_string<char, std::char_traits<char>, std::allocator<char>>&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::ClassTemplateSpecialization*, unsigned long long, long long, CppSharp::CppParser::AST::ClassTemplateSpecialization**, const CppSharp::CppParser::AST::ClassTemplateSpecialization**, CppSharp::CppParser::AST::ClassTemplateSpecialization*&, const CppSharp::CppParser::AST::ClassTemplateSpecialization*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::Expression*, unsigned long long, long long, CppSharp::CppParser::AST::Expression**, const CppSharp::CppParser::AST::Expression**, CppSharp::CppParser::AST::Expression*&, const CppSharp::CppParser::AST::Expression*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::VarTemplateSpecialization*, unsigned long long, long long, CppSharp::CppParser::AST::VarTemplateSpecialization**, const CppSharp::CppParser::AST::VarTemplateSpecialization**, CppSharp::CppParser::AST::VarTemplateSpecialization*&, const CppSharp::CppParser::AST::VarTemplateSpecialization*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::MacroDefinition*, unsigned long long, long long, CppSharp::CppParser::AST::MacroDefinition**, const CppSharp::CppParser::AST::MacroDefinition**, CppSharp::CppParser::AST::MacroDefinition*&, const CppSharp::CppParser::AST::MacroDefinition*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::TranslationUnit*, unsigned long long, long long, CppSharp::CppParser::AST::TranslationUnit**, const CppSharp::CppParser::AST::TranslationUnit**, CppSharp::CppParser::AST::TranslationUnit*&, const CppSharp::CppParser::AST::TranslationUnit*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::InlineContentComment*, unsigned long long, long long, CppSharp::CppParser::AST::InlineContentComment**, const CppSharp::CppParser::AST::InlineContentComment**, CppSharp::CppParser::AST::InlineContentComment*&, const CppSharp::CppParser::AST::InlineContentComment*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::BlockCommandComment::Argument, unsigned long long, long long, CppSharp::CppParser::AST::BlockCommandComment::Argument*, const CppSharp::CppParser::AST::BlockCommandComment::Argument*, CppSharp::CppParser::AST::BlockCommandComment::Argument&, const CppSharp::CppParser::AST::BlockCommandComment::Argument&>;
template class __declspec(dllexport) std::_Vec_iter_types<unsigned int, unsigned long long, long long, unsigned int*, const unsigned int*, unsigned int&, const unsigned int&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::VerbatimBlockLineComment*, unsigned long long, long long, CppSharp::CppParser::AST::VerbatimBlockLineComment**, const CppSharp::CppParser::AST::VerbatimBlockLineComment**, CppSharp::CppParser::AST::VerbatimBlockLineComment*&, const CppSharp::CppParser::AST::VerbatimBlockLineComment*&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::InlineCommandComment::Argument, unsigned long long, long long, CppSharp::CppParser::AST::InlineCommandComment::Argument*, const CppSharp::CppParser::AST::InlineCommandComment::Argument*, CppSharp::CppParser::AST::InlineCommandComment::Argument&, const CppSharp::CppParser::AST::InlineCommandComment::Argument&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::AST::HTMLStartTagComment::Attribute, unsigned long long, long long, CppSharp::CppParser::AST::HTMLStartTagComment::Attribute*, const CppSharp::CppParser::AST::HTMLStartTagComment::Attribute*, CppSharp::CppParser::AST::HTMLStartTagComment::Attribute&, const CppSharp::CppParser::AST::HTMLStartTagComment::Attribute&>;
template class __declspec(dllexport) std::_Vec_iter_types<CppSharp::CppParser::ParserDiagnostic, unsigned long long, long long, CppSharp::CppParser::ParserDiagnostic*, const CppSharp::CppParser::ParserDiagnostic*, CppSharp::CppParser::ParserDiagnostic&, const CppSharp::CppParser::ParserDiagnostic&>;
template class __declspec(dllexport) std::_Tree_iter_types<std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char>>, CppSharp::CppParser::AST::Declaration*>, unsigned long long, long long, std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char>>, CppSharp::CppParser::AST::Declaration*>*, const std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char>>, CppSharp::CppParser::AST::Declaration*>*, std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char>>, CppSharp::CppParser::AST::Declaration*>&, const std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char>>, CppSharp::CppParser::AST::Declaration*>&, std::_Tree_node<std::pair<std::basic_string<char, std::char_traits<char>, std::allocator<char>>, CppSharp::CppParser::AST::Declaration*>, void*>*>;