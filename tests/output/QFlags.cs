// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Wrappers {
    using System;
    using System.Runtime.InteropServices;
    using Mono.VisualC.Interop;
    
    public class QFlags<T> : ICppObject
     {
        protected CppInstancePtr native_ptr;
        private static IQFlags<T> impl = Wrappers.Libs.Lib.GetClass <IQFlags<T>, _QFlags, QFlags<T>>("QFlags");
        public QFlags(System.IntPtr arg0) {
            impl.QFlags(this.Native, arg0);
        }
        public QFlags(QFlag f) {
            impl.QFlags(this.Native, f);
        }
        public CppInstancePtr Native {
            get {
                return this.native_ptr;
            }
        }
        public bool TestFlag(GestureFlag f) {
            return impl.testFlag(this.Native, f);
        }
        public virtual void Dispose() {
            // FIXME: Check for inline destructor for this class.
            this.Native.Dispose();
        }
        public interface IQFlags<T> : ICppClassOverridable<QFlags<T>>
         {
            [Constructor()]
            void QFlags(CppInstancePtr @this, [MangleAs("void * *")] System.IntPtr arg0);
            [Constructor()]
            void QFlags(CppInstancePtr @this, [MangleAs("class QFlag")] QFlag f);
            [Const()]
            bool testFlag(CppInstancePtr @this, [MangleAs("enum GestureFlag")] GestureFlag f);
        }
        private struct _QFlags {
            private int i;
        }
    }
}
