// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Wrappers {
    using System;
    using System.Runtime.InteropServices;
    using Mono.VisualC.Interop;
    
    public class QColorDialog : QDialog {
        private static IQColorDialog impl = Wrappers.Libs.Lib.GetClass <IQColorDialog, _QColorDialog, QColorDialog>("QColorDialog");
        public QColorDialog(QWidget parent) {
            impl.QColorDialog(this.Native, parent);
        }
        public QColorDialog(QColor initial, QWidget parent) {
            impl.QColorDialog(this.Native, initial, parent);
        }
        public QColor CurrentColor {
            get {
                return impl.currentColor(this.Native);
            }
            set {
                impl.setCurrentColor(this.Native, value);
            }
        }
        public QColor SelectedColor {
            get {
                return impl.selectedColor(this.Native);
            }
        }
        public QFlags<QColorDialog::ColorDialogOption> Options {
            get {
                return impl.options(this.Native);
            }
            set {
                impl.setOptions(this.Native, value);
            }
        }
        public override void Dispose() {
        }
        public void SetOption(ColorDialogOption option, bool on) {
            impl.setOption(this.Native, option, on);
        }
        public bool TestOption(ColorDialogOption option) {
            return impl.testOption(this.Native, option);
        }
        public void Open(QObject receiver, string member) {
            impl.open(this.Native, receiver, member);
        }
        public static QColor GetColor(QColor initial, QWidget parent, QString title, QFlags<QColorDialog::ColorDialogOption> options) {
            return impl.getColor(initial, parent, title, options);
        }
        public static QColor GetColor(QColor initial, QWidget parent) {
            return impl.getColor(initial, parent);
        }
        public static uint GetRgba(uint rgba, ref bool ok, QWidget parent) {
            return impl.getRgba(rgba, ref  ok, parent);
        }
        public static int CustomCount() {
            return impl.customCount();
        }
        public static uint CustomColor(int index) {
            return impl.customColor(index);
        }
        public static void SetCustomColor(int index, uint color) {
            impl.setCustomColor(index, color);
        }
        public static void SetStandardColor(int index, uint color) {
            impl.setStandardColor(index, color);
        }
        public interface IQColorDialog : ICppClassOverridable<QColorDialog> {
            [Constructor()]
            void QColorDialog(CppInstancePtr @this, [MangleAs("class QWidget *")] QWidget parent);
            [Constructor()]
            void QColorDialog(CppInstancePtr @this, [MangleAs("class QColor const &")] QColor initial, [MangleAs("class QWidget *")] QWidget parent);
            [Virtual()]
            [Destructor()]
            void Destruct(CppInstancePtr @this);
            [Const()]
            QColor currentColor(CppInstancePtr @this);
            void setCurrentColor(CppInstancePtr @this, [MangleAs("class QColor const &")] QColor value);
            [Const()]
            QColor selectedColor(CppInstancePtr @this);
            void setOption(CppInstancePtr @this, [MangleAs("enum ColorDialogOption")] ColorDialogOption option, [MangleAs("bool")] bool on);
            [Const()]
            bool testOption(CppInstancePtr @this, [MangleAs("enum ColorDialogOption")] ColorDialogOption option);
            [Const()]
            QFlags<QColorDialog::ColorDialogOption> options(CppInstancePtr @this);
            void setOptions(CppInstancePtr @this, [MangleAs("class QFlags <QColorDialog::ColorDialogOption>")] QFlags<QColorDialog::ColorDialogOption> value);
            void open(CppInstancePtr @this, [MangleAs("class QObject *")] QObject receiver, [MangleAs("char const *")] string member);
            [Static()]
            QColor getColor([MangleAs("class QColor const &")] QColor initial, [MangleAs("class QWidget *")] QWidget parent, [MangleAs("class QString const &")] QString title, [MangleAs("class QFlags <QColorDialog::ColorDialogOption>")] QFlags<QColorDialog::ColorDialogOption> options);
            [Static()]
            QColor getColor([MangleAs("class QColor const &")] QColor initial, [MangleAs("class QWidget *")] QWidget parent);
            [Static()]
            uint getRgba([MangleAs("int unsigned")] uint rgba, [MangleAs("bool *")] ref bool ok, [MangleAs("class QWidget *")] QWidget parent);
            [Static()]
            int customCount();
            [Static()]
            uint customColor([MangleAs("int")] int index);
            [Static()]
            void setCustomColor([MangleAs("int")] int index, [MangleAs("int unsigned")] uint color);
            [Static()]
            void setStandardColor([MangleAs("int")] int index, [MangleAs("int unsigned")] uint color);
        }
        private struct _QColorDialog {
        }
    }
}
